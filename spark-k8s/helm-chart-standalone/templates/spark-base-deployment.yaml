apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "base-fullname" . }}
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    component: "{{ .Release.Name }}-{{ .Values.Base.Component }}"
spec:
  replicas: {{ default 1 .Values.Base.Replicas }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      component: "{{ .Release.Name }}-{{ .Values.Base.Component }}"
  template:
    metadata:
      labels:
        heritage: {{ .Release.Service | quote }}
        release: {{ .Release.Name | quote }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        component: "{{ .Release.Name }}-{{ .Values.Base.Component }}"
    spec:
      volumes:
      - name: {{ .Values.SharedVolume.Name }}
        hostPath:
          # directory location on host
          path: {{ .Values.SharedVolume.HostPath }}
          type: Directory
      containers:
        - name: {{ template "base-fullname" . }}
          image: "{{ .Values.Base.Image }}:{{ .Values.Base.ImageTag }}"
          volumeMounts:
          - name: {{ .Values.SharedVolume.Name }}
            mountPath: {{ .Values.SharedVolume.MountPoint }}
          imagePullPolicy: Always
          command: ["/wait-for-step.sh", "/bin/bash"]
          ports:
            - containerPort: {{ .Values.Base.ContainerPort }}
          resources:
            requests:
              cpu: "{{ .Values.Base.Cpu }}"
              memory: "{{ .Values.Base.Memory }}"
            limits:
              cpu: "{{ .Values.Base.CpuLimit }} "
              memory: "{{ .Values.Base.MemoryLimit }}"
          env:
          - name: SPARK_MASTER_HOST
            value: {{ template "master-fullname" . }}
          - name: SPARK_MASTER_PORT
            value: {{ .Values.Master.ServicePort | quote }}
          - name: SPARK_MASTER_WEBUI_PORT
            value: {{ .Values.WebUi.ContainerPort | quote }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "base-fullname" . }}
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    component: "{{ .Release.Name }}-{{ .Values.Base.Component }}"
spec:
  ports:
    - port: {{ .Values.Base.ServicePort }}
      targetPort: {{ .Values.Base.ContainerPort }}
  selector:
    component: "{{ .Release.Name }}-{{ .Values.Base.Component }}"
  type: {{ .Values.Base.ServiceType }}
  clusterIP: None
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "base-fullname" . }}-spark-app-ui
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    component: "{{ .Release.Name }}-{{ .Values.Base.Component }}"
spec:
  ports:
    - port: {{ .Values.Base.SparkAppUI_ContainerPort }}
      targetPort:  {{ .Values.Base.SparkAppUI_ContainerPort }}
      nodePort: {{ .Values.Base.SparkAppUI_NodePort }}
  selector:
    component: "{{ .Release.Name }}-{{ .Values.Base.Component }}"
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "base-fullname" . }}-airflow-web-ui
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    component: "{{ .Release.Name }}-{{ .Values.Base.Component }}"
spec:
  ports:
    - port: {{ .Values.Base.Airflow_ContainerPort }}
      targetPort:  {{ .Values.Base.Airflow_ContainerPort }}
      nodePort: {{ .Values.Base.Airflow_NodePort }}

  selector:
    component: "{{ .Release.Name }}-{{ .Values.Base.Component }}"
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "base-fullname" . }}-jupyter
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    component: "{{ .Release.Name }}-{{ .Values.Base.Component }}"
spec:
  ports:
    - port: {{ .Values.Base.Jupyter_ContainerPort }}
      targetPort:  {{ .Values.Base.Jupyter_ContainerPort }}
      nodePort: {{ .Values.Base.Jupyter_NodePort }}

  selector:
    component: "{{ .Release.Name }}-{{ .Values.Base.Component }}"
  type: NodePort
